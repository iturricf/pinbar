#!/usr/bin/env php
<?php

declare(strict_types=1);

use CharlieIndia\Pinbar\Calculator\Calculator;
use CharlieIndia\Pinbar\Operation\Operation;
use Commando\Command;

require_once __DIR__.'/../vendor/autoload.php';

$console = new Command();
$console
    ->option()
    ->require()
    ->aka('amount')
    ->title('amount')
    ->description('El monto de dinero a operar.');

$console
    ->option()
    ->require()
    ->aka('price')
    ->title('price')
    ->description('El precio del papel a operar.');

$console
    ->option('q')
    ->require(false)
    ->aka('quantity')
    ->title('quantity')
    ->description('Calcula la operacion en base a cantidad de papeles en lugar de monto de dinero.')
    ->boolean();

$console
    ->option('s')
    ->require(false)
    ->aka('sell')
    ->title('sell')
    ->description('Simula una operacion de venta en lugar de compra.')
    ->boolean();

$calc = new Calculator();

$opType = $console['sell'] ? Operation::TYPE_SELL : Operation::TYPE_BUY;

if ($console['sell'] || $console['quantity']) {
    try {
        $op = $calc->simulateQuantity(intval($console['amount']), floatval($console['price']), $opType);
    } catch (\DomainException $e) {
        printf("La cantidad a operar no puede ser menor a 1\n");

        return -1;
    }
} else {
    try {
        $op = $calc->simulateAmount(floatval($console['amount']), floatval($console['price']), $opType);
    } catch (\DomainException $e) {
        printf("El monto ingresado no es suficiente para cubrir al menos 1 papel en la operaciÃ³n\n");

        return -1;
    }

}

$output = "Cantidad:\t%d\nPrecio limite:\tAR$ %.2f\nMonto estimado:\tAR$ %.2f\n"
        . "Comision:\tAR$ %.2f\n"
        . "Impuestos:\tAR$ %.2f*\n"
        . "\tIVA Comision: AR$ %.2f\n"
        . "\tDerecho de mercado: AR$ %.2f\n"
        . "\nTOTAL:\t\tAR$ %.2f\n";

    printf($output, $op->getQuantity(), $op->getPrice(), $op->getAmount(), $op->getFee(), $op->getFeeTax() + $op->getMarketFee() + $op->getMarketFeeTax(), $op->getFeeTax(), $op->getMarketFee() + $op->getMarketFeeTax(), $op->getTotal());

if (!$console['sell']) {
    $sellOp = $calc->simulateBullish($op, 5);

    printf("\n\n\n");

    printf($output, $sellOp->getQuantity(), $sellOp->getPrice(), $sellOp->getAmount(), $sellOp->getFee(), $sellOp->getFeeTax() + $sellOp->getMarketFee() + $sellOp->getMarketFeeTax(), $sellOp->getFeeTax(), $sellOp->getMarketFee() + $sellOp->getMarketFeeTax(), $sellOp->getTotal());
}
